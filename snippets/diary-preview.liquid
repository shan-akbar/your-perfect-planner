
<script>
    function formatDate(date) {
    var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

        if (month.length < 2) 
            month = '0' + month;
        if (day.length < 2) 
            day = '0' + day;

        return [year, month, day].join('-');
    }
</script>

{% for i in (1..3) %}
    {% if i == 1 %}
        {% assign diary_pages_temp = product.metafields.custom.diary_pages.value %}
    {% elsif i == 2 %}
        {% assign diary_pages_temp = product.metafields.custom.diary_pages_2.value %}
    {% elsif i == 3 %}
        {% assign diary_pages_temp = product.metafields.custom.diary_pages_3.value %}
    {% endif %}

    {%- paginate diary_pages_temp by 128 -%}
        {% assign diary_pages_temp = diary_pages_temp | reverse | reverse %}
        {%  assign diary_pages = diary_pages | concat: diary_pages_temp %}
    {%- endpaginate -%}
    
{% endfor %}

   {% assign date_range_block = blocks | where: "type", "planner_date_range" %}
    <script>
        let start_date = {{ date_range_block[0].settings.start_date | json }};
        let current_date = new Date(start_date);
        let diary_pages = [];
        let diary_pages_backup = [];
        {% for diary_page in diary_pages %}

            {% assign page_type = 'day' %}
            {% if forloop.first or forloop.last %}
                {% assign page_type = 'outer_cover' %}
                diary_pages.push({page_type: {{ page_type | json }}, date: '' ,page_url: {{ diary_page |  image_url: width: diary_page.width | json }}});
                diary_pages_backup.push({page_type: {{ page_type | json }}, date: '' ,page_url: {{ diary_page |  image_url: width: diary_page.width | json }}});
            {% else %}
                diary_pages.push({page_type: {{ page_type | json }}, date: formatDate(current_date) ,page_url: {{ diary_page |  image_url: width: diary_page.width | json }}});
                diary_pages_backup.push({page_type: {{ page_type | json }}, date: formatDate(current_date) ,page_url: {{ diary_page |  image_url: width: diary_page.width | json }}});
                current_date.setDate(current_date.getDate() + 1);
            {% endif %}
            
           
        {% endfor %}
    </script>

<div class="custom-planner__price" data-unitprice="{{ section.settings.unit_page_price }}" data-fixedprice="{{ section.settings.fixed_added_price }}"></div>
<div class="diary-wrapper">
  
  <div class="diary-flip">

        {% for index in (1..1000) %}
            
                
        <div class="diary-flip_page diary-flip_page__{{index}} {% if index > 2 %}display__none{% endif %}" style="z-index: {{ 1000 | minus: index }};" data-pageindex="{{index}}"> 
                    <div class="diary-flip_back">
                        <img src="https://cdn.shopify.com/s/files/1/0870/1021/4194/files/blank-page.jpg?v=1716241450" class="back-page">
                        <label class="diary-flip_back-btn">Prev</label>
                    </div>
                    <div class="diary-flip_front">
                        <img src="{{ diary_pages[0] | image_url: width: diary_pages[0].width }}" class="front-page">
                        <label class="diary-flip_next-btn">NEXT</label>
                    </div>
        </div>
                
        {% endfor %}
       
  </div>

</div>


<script>

    function updateDiaryPages(){
        let start_date_element = document.getElementById("start_date");
        let end_date_element = document.getElementById("end_date");
        let start_date = start_date_element.value;
        let end_date = end_date_element.value;
        if(!start_date){
            start_date = document.querySelector('.planner-date__range').getAttribute('data-startdate');
        }

        if(!end_date){
            end_date = document.querySelector('.planner-date__range').getAttribute('data-enddate');
        }
        
        start_date = new Date(start_date);
        end_date = new Date(end_date);

        let updated_pages = [];
        let pages_length = diary_pages_backup.length;
        for(var i=0; i<pages_length; ++i){ 
            
            if(diary_pages_backup[i].page_type == 'day'){
                let current_page_date = new Date(diary_pages_backup[i].date);
                if(current_page_date >= start_date && current_page_date <= end_date){
                    updated_pages.push(diary_pages_backup[i]);
                }
            }else{
                updated_pages.push(diary_pages_backup[i]);
            }
        }

        diary_pages = updated_pages;

            let inputs = document.querySelectorAll('input[type=checkbox]');
 
            for (let i = 0; i < inputs.length; i++) {
                inputs[i].checked = false;
            }

        renderPages();

    }

    function handleDateRangeChange(){

        let target = this.event.target;
        let start_date_element = document.getElementById("start_date");
        let end_date_element = document.getElementById("end_date");
        let start_date = start_date_element.value;
        let end_date = end_date_element.value;
        if(!start_date){
            start_date = document.querySelector('.planner-date__range').getAttribute('data-startdate');
        }

        if(!end_date){
            end_date = document.querySelector('.planner-date__range').getAttribute('data-enddate');
        }

        let start_date_obj = new Date(start_date);
        let end_date_obj = new Date(end_date);
        let error__message = document.querySelector(".date-range-error__message");
        if(start_date_obj > end_date_obj){
            
            error__message.style.display = "block";
            if(target.isSameNode(start_date_element)){
                start_date_element.value = end_date_element.value;
                error__message.innerHTML = "Start Date canot be after the end date!"
            }else{
                end_date_element.value = start_date_element.value;
                error__message.innerHTML = "End Date canot be before the start date!"
            }

            setTimeout(
                function(error__message) {
                    document.querySelector(".date-range-error__message").style.display = "none";
                }, 5000
            );

        }else{
            error__message.style.display = "none";
        }

    }

    
   
    function renderPages(){

        if(diary_pages.length % 2 != 0){
            diary_pages.splice(diary_pages.length-1, 0, {page_type:"blank", page_url:"https://cdn.shopify.com/s/files/1/0870/1021/4194/files/blank-page.jpg?v=1716241450" });
        }

        let old_last_page = document.querySelector(".diary-flip_page.last__page");
        old_last_page?.classList.remove('last__page');
        let old_second_last_page = document.querySelector(".diary-flip_page.second_last__page");
        old_second_last_page?.classList.remove('second_last__page');
        let pages_preview = document.querySelectorAll(".diary-flip_page");
        let pages_length = diary_pages.length/2;
        let last_page = pages_preview[pages_length - 1];
        let second_last_page = pages_preview[pages_length - 2];
        last_page.classList.add("last__page"); 
        second_last_page.classList.add("second_last__page");
        let side_index = 0;
        let run_pointer_fix = true;
        for(var i=0; i<pages_length; ++i){    
            let page = pages_preview[i];
            page.querySelector(".front-page").setAttribute("src", diary_pages[side_index].page_url);
            page.querySelector(".back-page").setAttribute("src", diary_pages[side_index + 1].page_url);
            if(diary_pages[side_index].page_type == 'day'){
                
                page.querySelector(".front-page").setAttribute("data-date", diary_pages[side_index].date);
              
            }
            if(diary_pages[side_index + 1].page_type == 'day'){
               
                page.querySelector(".back-page").setAttribute("data-date", diary_pages[side_index + 1].date);
              
            }
            side_index += 2;
            if(page.classList.contains("flipped") && !page.classList.contains("display__none") && run_pointer_fix){
                run_pointer_fix = false;
                let next_page = pages_preview[i+1];
                if(next_page){
                    next_page.classList.remove('display__none');
                }
                
                let after_next_page = pages_preview[i+2];
                if(after_next_page){
                    after_next_page.classList.remove('display__none');
                    if(after_next_page.classList.contains('flipped')){
                        after_next_page.classList.remove('flipped');
                        let current_zindex = after_next_page.style.zIndex;
                        after_next_page.style.zIndex = 1000-Number(current_zindex);
                    }
                    
                }

                let after_after_next_page = pages_preview[i+3];
                if(after_after_next_page){
                    after_after_next_page.classList.remove('display__none');
                    if(after_after_next_page.classList.contains('flipped')){
                        after_after_next_page.classList.remove('flipped');
                        let current_zindex = after_after_next_page.style.zIndex;
                        after_after_next_page.style.zIndex =  1000-Number(current_zindex);
                    }
                }
            }
        }

        let preview_pages_length = pages_preview.length;
        let reverse_fix = false;
        for(var i=pages_length;i<preview_pages_length;++i){
            let page = pages_preview[i];
           
            page.classList.add('display__none');
            if(page.classList.contains("flipped")){
                reverse_fix = true;
                page.classList.remove("flipped");
                let current_zindex = page.style.zIndex;
                page.style.zIndex =  1000-Number(current_zindex);
            }
        }

        if(reverse_fix){
            last_page.classList.remove('display__none');
            if(last_page.classList.contains('flipped')){
                last_page.classList.remove('flipped');
                let current_zindex = last_page.style.zIndex;
                last_page.style.zIndex =  1000-Number(current_zindex);
            }
            if(!second_last_page.classList.contains('flipped')){
                second_last_page.classList.add('flipped');
                let current_zindex = second_last_page.style.zIndex;
                second_last_page.style.zIndex =  1000-Number(current_zindex);
            }
            second_last_page.classList.remove('display__none');
            let third_last_page = pages_preview[pages_length - 3];
            if(!third_last_page.classList.contains('flipped')){
                third_last_page.classList.add('flipped');
                let current_zindex = third_last_page.style.zIndex;
                third_last_page.style.zIndex =  1000-Number(current_zindex);
            }
            third_last_page.classList.remove('display__none');
        }

        updatePrice();
    }

    function updatePrice(){
    
        const myInterval = setInterval(function (){
            let priceTarget = document.querySelector(".price__container .price-item.price-item--regular");
            if(priceTarget){
                let noOfPages = diary_pages.length;
                let unitPrice = Number(document.querySelector(".custom-planner__price").getAttribute("data-unitprice"));
                let fixedAddedPrice = Number(document.querySelector(".custom-planner__price").getAttribute("data-fixedprice"));
                let totalPrice = ((noOfPages * unitPrice) + fixedAddedPrice).toFixed(2);
                priceTarget.innerHTML = "$" + totalPrice;
                clearInterval(myInterval);
            }
        }, 100);

    }

    document.addEventListener("DOMContentLoaded", () => {
        renderPages();   
    });

    function extraPages(){
        let page_type = this.event.target.closest(".planner-custom-pages_wrapper").getAttribute("data-pagetype");

        if(page_type == "front_cover"){
            frontCoverPages(this.event.target);
        }
        
        if(page_type == "between_week"){
            inBetweenWeekPages(this.event.target);
        }

        if(page_type == "between_month"){
            inBetweenMonthPages(this.event.target);
        }

        if(page_type == "back_cover"){
            backCoverPages(this.event.target);
        }
    }

    function frontCoverPages(element){
        let image_front = element.closest(".page_item").querySelector(".extra-image").getAttribute("src");
        let image_back = element.closest(".page_item").querySelector(".preview-icon").getAttribute("data-backimage");
        let pages_length = diary_pages.length;
        let updated_pages = [];
        let cover_added = false;
        if(element.checked){
            for(var i=0;i<pages_length;++i){
                if(diary_pages[i].page_type != "outer_cover" && diary_pages[i].page_type != "inner_cover_front" && !cover_added){
                    cover_added = true;
                    updated_pages.push({page_type: "inner_cover_front", page_url: image_front });
                    if(image_back){
                        updated_pages.push({page_type: "inner_cover_front", page_url: image_back });
                    }
                }

                if(diary_pages[i].page_type != "blank"){
                    updated_pages.push(diary_pages[i]);
                }

            }
        }else{
            for(var i=0;i<pages_length;++i){
                if((diary_pages[i].page_url == image_front || diary_pages[i].page_url == image_back)&& diary_pages[i].page_type == 'inner_cover_front'){
                    continue;
                }else{
                    
                    if(diary_pages[i].page_type != "blank"){
                        updated_pages.push(diary_pages[i]);
                    }
                }
            
            }
        }

        diary_pages = updated_pages;
        renderPages();
    }

    function inBetweenWeekPages(element){
        let image_front = element.closest(".page_item").querySelector(".extra-image").getAttribute("src");
        let image_back = element.closest(".page_item").querySelector(".preview-icon").getAttribute("data-backimage");
        let pages_length = diary_pages.length;
        let updated_pages = [];
        if(element.checked){
            let day_page_counter = -1; 
            for(var i=0 ; i < pages_length ; ++i){
                if(day_page_counter == 7 && diary_pages[i].page_type != "week"){
                    updated_pages.push({page_type: "week", page_url: image_front });
                    if(image_back){
                        updated_pages.push({page_type: "week", page_url: image_back });
                    }
                    day_page_counter = 0;
                }

                if(diary_pages[i].page_type != "blank"){
                    updated_pages.push(diary_pages[i]);
                }

                if(diary_pages[i].page_type == 'day'){
                    if(day_page_counter == -1){
                        let first_day_date = new Date(diary_pages[i].date);
                        day_page_counter = first_day_date.getDay();
                    }else{
                        ++day_page_counter; 
                    }
                }

            }
           
        }else{
            for(var i=0;i<pages_length;++i){
                if((diary_pages[i].page_url == image_front || diary_pages[i].page_url == image_back)&& diary_pages[i].page_type == 'week'){
                    continue;
                }else{
                    if(diary_pages[i].page_type != "blank"){
                        updated_pages.push(diary_pages[i]);
                    }
                }
            
            }
        }
        diary_pages = updated_pages;
        renderPages();
    }

    function daysInMonth(month, year) {
        return new Date(year, month, 0).getDate();
    }

    function inBetweenMonthPages(element){
        let image_front = element.closest(".page_item").querySelector(".extra-image").getAttribute("src");
        let image_back = element.closest(".page_item").querySelector(".preview-icon").getAttribute("data-backimage");
        let pages_length = diary_pages.length;
        let updated_pages = [];
        if(element.checked){
            let current_month = 1;
            let day_counter = -1;
            let days_in_current_month = 30;
            let current_year = 0;
            for(var i=0;i<pages_length;++i){
                
                if(day_counter == days_in_current_month){
                    if(diary_pages[i].page_type != "week" && diary_pages[i].page_type != "month"){
                        updated_pages.push({page_type: "month", page_url: image_front });
                        if(image_back){
                            updated_pages.push({page_type: "month", page_url: image_back });
                        }
                        
                        ++current_month
                        days_in_current_month = daysInMonth(current_month, current_year);
                        day_counter = 0
                    }
                }

                if(diary_pages[i].page_type != "blank"){
                    updated_pages.push(diary_pages[i]);
                }

                if(diary_pages[i].page_type == 'day'){
                    let current_date = new Date(diary_pages[i].date);
                    current_year = current_date.getFullYear();
                    if(day_counter == -1){
                        current_month = current_date.getMonth() + 1;
                        days_in_current_month = daysInMonth(current_month, current_date.getFullYear());
                        day_counter = current_date.getDate();
                    }else{
                        ++day_counter;
                        current_year = current_date.getFullYear();
                    }

                }
            }
        }else{
            for(var i=0;i<pages_length;++i){
                if((diary_pages[i].page_url == image_front || diary_pages[i].page_url == image_back)&& diary_pages[i].page_type == 'month'){
                    continue;
                }else{
                    if(diary_pages[i].page_type != "blank"){
                        updated_pages.push(diary_pages[i]);
                    }
                }
            
            }
        }
        diary_pages = updated_pages;
        renderPages();
    }

    function backCoverPages(element){
        let image_front = element.closest(".page_item").querySelector(".extra-image").getAttribute("src");
        let image_back = element.closest(".page_item").querySelector(".preview-icon").getAttribute("data-backimage");
        let pages_length = diary_pages.length;
        let updated_pages = [];

        if(element.checked){
            if(diary_pages[pages_length-2].page_type == "blank"){
                diary_pages[pages_length-2] = {page_type:"inner_cover_back", page_url: image_front };
                if(image_back){
                    diary_pages[pages_length-2] = {page_type:"inner_cover_back", page_url: image_back };
                }
            }else{
                diary_pages.splice(diary_pages.length-1, 0, {page_type:"inner_cover_back", page_url: image_front });
                if(image_back){
                    diary_pages.splice(diary_pages.length-1, 0, {page_type:"inner_cover_back", page_url: image_back });
                }
            }
        }else{
            for(var i=0;i<pages_length;++i){
                if((diary_pages[i].page_url == image_front || diary_pages[i].page_url == image_back)&& diary_pages[i].page_type == 'inner_cover_back'){
                    continue;
                }else{
                    if(diary_pages[i].page_type != "blank"){
                        updated_pages.push(diary_pages[i]);
                    }
                }
            
            }
            diary_pages = updated_pages;
        }
        
        
        renderPages();
    }

</script>
